#lang racket
(define (sqrt-iter guss x)
  (if (good-enough? guss x)
      guss
      (sqrt-iter (improve guss x)
                 x)))
(define (improve guss x)
  (average guss (/ x guss)))
(define (average x y)
  (/ (+ x y)
     2))
(define (good-enough? guss x)
  (< (abs (- (square guss) x))
             0.001))
(define (square x)
  (* x x))
(define (abs x)
  ( if (< x 0)
       (- x)
       x))
(define (sqrt x)
  (sqrt-iter 1.0 x))