(define (make-rat n d)
  (define (positive? a b)
    (> (* a b) 0))
  (define (be-pos c)
    (if (< c 0)
        (- c)
        c))
  (define (getpostive a b)
    (if (postive? a b)
        ((be-pos a)
         (be-pos b))
        ((- (bepos a))
         (be-pos b))))
  (define (try m k)
    ((getpostive m k)
     (cons m k)))
  (try n d))