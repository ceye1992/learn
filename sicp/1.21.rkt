#lang racket
(define (smallest-divisor n)
  (find-divisor n 2))
(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        ((divisor? n test-divisor) test-divisor)
        (else (find-divisor n (+ 1 test-divisor)))))
(define (divisor? a b)
  (= (remainder a b) 0))
(define (square n)
  (* n n))